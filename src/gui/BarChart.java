/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import connexion.Connexion;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Moi
 */
public class BarChart extends javax.swing.JInternalFrame {

    private DefaultCategoryDataset dataset;
    private Connexion connexion;

    /**
     * Creates new form BarChart
     */
    public BarChart() {
        initComponents();
        connexion = Connexion.getInstance();
        this.setTitle("Répartition des supports par professeur");
        dataset = new DefaultCategoryDataset();
        load();
        JFreeChart barChart = ChartFactory.createBarChart(
                "Nombre de supports par professeur",
                "Professeur",
                "Nombre de supports",
                dataset
        );
        CategoryPlot plot = (CategoryPlot) barChart.getPlot();
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, Color.pink);
        // Modifier l'espacement entre les barres
        plot.getDomainAxis().setCategoryMargin(0.3);
        ChartPanel chartPanel = new ChartPanel(barChart);
        setContentPane(chartPanel);
    }

    private void load() {
        String req = "SELECT p.nom, p.prenom, COUNT(*) AS nb_supports "
                + "FROM professeur p "
                + "LEFT JOIN ajoutSupport a ON p.id = a.professeur_id "
                + "GROUP BY p.id, p.nom, p.prenom";

        try (PreparedStatement ps = connexion.getCn().prepareStatement(req);
                ResultSet rs = ps.executeQuery()) {

            dataset.clear();  // Efface les anciennes données

            while (rs.next()) {
                String professeur = rs.getString("nom") + " " + rs.getString("prenom");
                int nbSupports = rs.getInt("nb_supports");
                dataset.addValue(nbSupports, "Supports", professeur);
            }

        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erreur de connexion à la base de données !");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
